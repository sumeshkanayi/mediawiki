<?php
# This file was automatically generated by the MediaWiki 1.21alpha
# installer. If you make manual changes, please keep track in case you
# need to recreate them later.
#
# See includes/DefaultSettings.php for all configurable settings
# and their default values, but don't forget to make changes in _this_
# file, not there.
#
# Further documentation for configuration settings may be found at:
# http://www.mediawiki.org/wiki/Manual:Configuration_settings

# Protect against web entry
if ( !defined( 'MEDIAWIKI' ) ) {
	exit;
}

## Uncomment this to disable output compression
# $wgDisableOutputCompression = true;

$wgSitename      = "My Wiki";
$wgMetaNamespace = "My_Wiki";

## The URL base path to the directory containing the wiki;
## defaults for all runtime URL paths are based off of this.
## For more information on customizing the URLs
## (like /w/index.php/Page_title to /wiki/Page_title) please see:
## http://www.mediawiki.org/wiki/Manual:Short_URL
$wgScriptPath       = "";
$wgScriptExtension  = ".php";
## The protocol and server name to use in fully-qualified URLs
$wgServer           = "http://" . $_SERVER["SERVER_NAME"];

## The relative URL path to the skins directory
$wgStylePath        = "$wgScriptPath/skins";

## The relative URL path to the logo.  Make sure you change this from the default,
## or else you'll overwrite your logo when you upgrade!
$wgLogo             = "$wgStylePath/common/images/wiki.png";

## UPO means: this is also a user preference option

$wgEnableEmail      = true;
$wgEnableUserEmail  = true; # UPO

$wgEmergencyContact = "apache@127.0.0.1";
$wgPasswordSender   = "apache@127.0.0.1";

$wgEnotifUserTalk      = false; # UPO
$wgEnotifWatchlist     = false; # UPO
$wgEmailAuthentication = true;

## Database settings
$wgDBtype           = "mysql";
$wgDBserver         = "$MYSQL_SERVER";
$wgDBname           = "$MYSQL_DB";
$wgDBuser           = "$MYSQL_USER";
$wgDBpassword       = "$MYSQL_PASSWORD";

# MySQL specific settings
$wgDBprefix         = "";

# MySQL table options to use during installation or update
$wgDBTableOptions   = "ENGINE=InnoDB, DEFAULT CHARSET=binary";

# Experimental charset support for MySQL 5.0.
$wgDBmysql5 = false;

## Shared memory settings
//$wgMainCacheType    = CACHE_NONE;
//$wgMemCachedServers = array();
$wgMemCachedPersistent = false;
$wgUseMemCached = true;
$wgMainCacheType = CACHE_MEMCACHED;
$wgParserCacheType = CACHE_MEMCACHED;
$wgMemCachedTimeout = 5000000;
$wgMemCachedInstanceSize = 2000;
$wgMemCachedServers = array('127.0.0.1:11211');
$wgResourceLoaderMaxage['unversioned'] = 1;

## To enable image uploads, make sure the 'images' directory
## is writable, then set this to true:
$wgEnableUploads  = true;
$wgUseImageMagick = true;
$wgImageMagickConvertCommand = "/usr/bin/convert";

# InstantCommons allows wiki to use images from http://commons.wikimedia.org
$wgUseInstantCommons  = true;

## If you use ImageMagick (or any other shell command) on a
## Linux server, this will need to be set to the name of an
## available UTF-8 locale
$wgShellLocale = "en_US.utf8";

## If you want to use image uploads under safe mode,
## create the directories images/archive, images/thumb and
## images/temp, and make them all writable. Then uncomment
## this, if it's not already uncommented:
#$wgHashedUploadDirectory = false;

## Set $wgCacheDirectory to a writable directory on the web server
## to make your wiki go slightly faster. The directory should not
## be publically accessible from the web.
$wgCacheDirectory = "$IP/cache";

# Site language code, should be one of the list in ./languages/Names.php
$wgLanguageCode = "en";
$wgVariantArticlePath = '/index.php/$2/$1';
$wgArticlePath = '/index.php/wiki/$1';

$wgSecretKey = "1c20153c220941132df0c8a0e07e43e87982e5f854e98d5700282567c55cd0c6";

# Site upgrade key. Must be set to a string (default provided) to turn on the
# web installer while LocalSettings.php is in place
$wgUpgradeKey = "7d8da3d4bb95e3c2";

## Default skin: you can change the default skin. Use the internal symbolic
## names, ie 'standard', 'nostalgia', 'cologneblue', 'monobook', 'vector':
$wgDefaultSkin = "vector";

## For attaching licensing metadata to pages, and displaying an
## appropriate copyright notice / icon. GNU Free Documentation
## License and Creative Commons licenses are supported so far.
$wgRightsPage = ""; # Set to the title of a wiki page that describes your license/copyright
$wgRightsUrl = "//creativecommons.org/licenses/by-sa/3.0/";
$wgRightsText = "Creative Commons Attribution";
$wgRightsIcon = "{$wgStylePath}/common/images/cc-by.png";

# Path to the GNU diff3 utility. Used for conflict resolution.
$wgDiff3 = "/usr/bin/diff3";

# Query string length limit for ResourceLoader. You should only set this if
# your web server has a query string length limit (then set it to that limit),
# or if you have suhosin.get.max_value_length set in php.ini (then set it to
# that value)
$wgResourceLoaderMaxQueryLength = -1;

# End of automatically generated settings.
# Add more configuration options below.

# debugging and testing
//$wgResourceLoaderDebug = true;
$wgEnableJavaScriptTest = true;
$wgShowExceptionDetails = true;
$wgDebugDumpSql = true;
$wgDebugLogFile = "/tmp/sql.txt";
//$wgDevelopmentWarnings = true;

# prevent background jobs from running on requests
# http://www.mediawiki.org/wiki/Manual:$wgJobRunRate
$wgJobRunRate = 0;

$wgAllowUserJs = true;
$wgAllowUserCss = true;

# a namespace for my own helper settings (not to pollute the global namespace even more)
class MyLocalSettings {
	public static $centralAuthOtherSite = '55qr.localtunnel.com';
}

# not an MW extension, but sometimes helpful
//require_once "$IP/extensions/FirePHPCore-0.3.2/lib/FirePHPCore/fb.php";

require_once "$IP/extensions/ParserFunctions/ParserFunctions.php";
require_once "$IP/extensions/Cite/Cite.php";
require_once "$IP/extensions/PageImages/PageImages.php";
require_once "$IP/extensions/GeoData/GeoData.php";

# BetaFeatures
require_once( "$IP/extensions/BetaFeatures/BetaFeatures.php" );

# Minifier
# https://gerrit.wikimedia.org/r/#/c/74293/
//require_once "$IP/extensions/Minifier/Minifier.php";
$wgMinifierHosts = array( 'localhost:8888' );

# Parsoid
require_once("$IP/extensions/Parsoid/Parsoid.php");

# VisualEditor
require_once("$IP/extensions/VisualEditor/VisualEditor.php");
// URL to the Parsoid instance
// MUST NOT end in a slash due to Parsoid bug
$wgVisualEditorParsoidURL = 'http://localhost:8000';
$wgDefaultUserOptions['visualeditor-enable'] = 1;

# MobileFrontend
require_once "$IP/extensions/MobileFrontend/MobileFrontend.php";
$wgMFForceSecureLogin = false;
$wgMFAutodetectMobileView = true;
$wgMFNearby = true;
$wgMFNearbyEndpoint = 'http://en.m.wikipedia.org/w/api.php';
$wgMFAjaxUploadProgressSupport = true;
$wgMFKeepGoing = true;
# login logo
$wgMobileFrontendLogo = '//upload.wikimedia.org/wikipedia/commons/thumb/1/10/Wikipedia-W-bold-in-square.svg/72px-Wikipedia-W-bold-in-square.svg.png';
# footer logo (comment to get text instead of <img>)
//$wgMFCustomLogos = array( 'copyright' => '/extensions/MobileFrontend/images/logo-copyright-en.png' );
$wgValidSkinNames['minerva'] = "Minerva";

# EventLogging
require_once "$IP/extensions/EventLogging/EventLogging.php";
$wgEventLoggingBaseUri = 'http://localhost:8080/event.gif';
$wgEventLoggingSchemaApiUri = 'http://meta.wikimedia.org/w/api.php';
$wgEventLoggingFile = '/var/log/mediawiki/events.log';

# Echo
require_once "$IP/extensions/Echo/Echo.php";
require_once "$IP/extensions/Thanks/Thanks.php";

# CommonsMetadata
//require_once "$IP/extensions/CommonsMetadata/CommonsMetadata.php";

# ConfirmEdit (captcha)
//require_once "$IP/extensions/ConfirmEdit/ConfirmEdit.php";
//require_once "$IP/extensions/ConfirmEdit/FancyCaptcha.php";
$wgCaptchaClass = 'FancyCaptcha';
$wgCaptchaDirectory = "$IP/cache/captcha";
$wgCaptchaDirectoryLevels = 0;
$wgCaptchaSecret = "FOO";
//$wgCaptchaTriggers['edit'] = true;

# AbuseFilter
//require_once "$IP/extensions/AbuseFilter/AbuseFilter.php";
$wgGroupPermissions['sysop']['abusefilter-modify'] = true;
$wgGroupPermissions['*']['abusefilter-log-detail'] = true;
$wgGroupPermissions['*']['abusefilter-view'] = true;
$wgGroupPermissions['*']['abusefilter-log'] = true;
$wgGroupPermissions['sysop']['abusefilter-private'] = true;
$wgGroupPermissions['sysop']['abusefilter-modify-restricted'] = true;
$wgGroupPermissions['sysop']['abusefilter-revert'] = true;

# UniversalLanguageSelector
require_once "$IP/extensions/UniversalLanguageSelector/UniversalLanguageSelector.php";
//$wgULSMobileWebfontsEnabled = true;

# VectorBeta
require_once "$IP/extensions/VectorBeta/VectorBeta.php";
$wgVectorBetaPersonalBar = true;
$wgVectorBetaWinter = true;

# MultimediaViewer
//require_once "$IP/extensions/MultimediaViewer/MultimediaViewer.php";

# Zero
//$wgGroupPermissions['zeroadmin']['zero-edit'] = true;
//$wgMFAutodetectMobileView = true; // autodetects mobile User-Agent
//require_once("$IP/extensions/ZeroRatedMobileAccess/ZeroRatedMobileAccess.php");
//$wgEnableZeroRatedMobileAccessTesting = true;
//$wgZeroRatedMobileAccessApiUri = 'http://meta.wikimedia.org/w/api.php';
//$wgZeroRatedMobileAccessDisableCache = true;
//$wgZeroRatedMobileAccessEnableZeroConfigPages = true;

# Flow
require_once __DIR__ . "/extensions/Flow/Flow.php";
$wgFlowOccupyNamespaces = array( NS_USER_TALK );

# TextExtracts
require_once __DIR__ . "/extensions/TextExtracts/TextExtracts.php";

# Popups (hovercards)
require_once __DIR__ . "/extensions/Popups/Popups.php";

# CentralAuth
/*
require_once "$IP/extensions/CentralAuth/CentralAuth.php";
$wgConf = new SiteConfiguration;
$wgLocalDatabases = array( 'my_wiki' );
$wgConf->wikis = $wgLocalDatabases;
$wgConf->suffixes = array( 'wiki' );
$wgConf->localVHosts = array( 'localhost' );
$wgConf->extractAllGlobals( $wgDBname );

$wgConf->settings = array(
	'wgCanonicalServer' => array(
		'my_wiki' => 'http://' . MyLocalSettings::$centralAuthOtherSite,
	),
	'wgServer' => array(
		'my_wiki' => 'http://' . MyLocalSettings::$centralAuthOtherSite,
	),
	'wgScriptPath' => array(
		'default' => ''
	),
	'wgArticlePath' => array(
		'default' => '/index.php/wiki/$1'
	),
	'wgLanguageCode' => array(
		//dont change, if all wikis are english *BE careful not to alter this line if you use RegEx to replace COD with your wiki name!
		'default' => '$lang',
	),
	'wgLocalInterwiki' => array(
		'default' => '$lang',
	),
);

$wgCentralAuthCookies = true;
$wgCentralAuthAutoNew = true;
$wgCentralAuthAutoLoginWikis = array(
	MyLocalSettings::$centralAuthOtherSite => 'my_wiki'
);
$wgCentralAuthLoginIcon = '/home/jgonera/www/extensions/MobileFrontend/images/mw.png';
*/